apply plugin: 'com.android.application'

dependencies {
    compile project(':OldCSipSimple')
    compile project(':mopub-sdk')
    compile ('com.google.android.gms:play-services-base:7.0.0')
    compile ('com.google.android.gms:play-services-gcm:7.0.0')
    compile ('com.google.android.gms:play-services-ads:7.0.0')
    compile ('com.facebook.android:facebook-android-sdk:3.23.1')
    compile ('org.apache.httpcomponents:httpmime:4.1.1')
    compile ('oauth.signpost:signpost-core:1.2.1.1')
    compile ('oauth.signpost:signpost-jetty6:1.2.1.1')
    compile ('com.sponsorpay:sponsorpay-android-sdk:7.1.1')
    compile ('org.twitter4j:twitter4j-core:4.0.3')
    compile ('com.android.support:multidex:1.0.0')

    compile files('libs/admarvel-android-sdk-core-adcolony.jar')
    compile files('libs/asmack-android-18-0.8.9.jar')
    compile files('libs/AudienceNetwork.jar')
    compile files('libs/gcm.jar')
    compile files('libs/FlurryAnalytics-5.5.0.jar')
}

repositories {
    maven {
        name "Fyber's maven repo"
        url "https://dl.bintray.com/fyber/maven"
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        multiDexEnabled true
    }

    dexOptions {
       // javaMaxHeapSize "4m"
    }

    buildTypes {
        debug {
            debuggable true
            //runProguard false
            //applicationIdSuffix ".debug"
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
        }
        release {
            debuggable false
            //runProguard false
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 14
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 14
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['jniLibs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}